plugins {
  id 'java'
  id 'com.jfrog.bintray' version '1.7'
  id 'eclipse'
  id 'idea'
  id 'maven-publish'
}

sourceCompatibility = 1.8

// The group will be overridden in LinkedIn builds
group = rootProject.group

repositories {
  jcenter()
}

dependencies {
  compile 'joda-time:joda-time:2.5'
  compile 'log4j:log4j:1.2.16'
  compile 'org.apache.hadoop:hadoop-common:2.6.1'
  compile 'org.apache.hadoop:hadoop-mapreduce-client-core:2.6.1'

  testCompile 'org.apache.hadoop:hadoop-common:2.6.1:tests'
  testCompile 'org.apache.hadoop:hadoop-hdfs:2.6.1:tests'
  testCompile 'org.apache.hadoop:hadoop-mapreduce-client-hs:2.6.1'
  testCompile 'org.testng:testng:6.4'
}

test {
  useTestNG()
}

// Maven publishing setup necessary for linking Bintray to JCenter
publishing {
  publications {
    hadoopJobsPublication(MavenPublication) {
      from components.java
      groupId rootProject.group
      artifactId project.name
      version project.version
    }
  }
}

// Make sure we don't accidentally publish a SNAPSHOT version
bintrayUpload { task ->
  doFirst {
    if (version.endsWith("SNAPSHOT")) {
      throw new GradleException("Cannot publish SNAPSHOT versions")
    }
  }
}

// Configuration for uploading to Bintray
if (project.hasProperty('bintrayUser') && project.hasProperty('bintrayApiKey')) {
  bintray {
    dryRun = false
    user = project.bintrayUser
    key = project.bintrayApiKey
    publications = ['hadoopJobsPublication']

    pkg {
      desc = 'LinkedIn Gradle Plugin and DSL for the Apache Hadoop Ecosystem'
      labels = ['azkaban', 'gradle', 'hadoop', 'hadoopdsl', 'linkedin']
      licenses = ['Apache-2.0']
      name = 'linkedin-gradle-plugin-for-apache-hadoop'
      repo = 'maven'

      issueTrackerUrl = 'https://github.com/linkedin/linkedin-gradle-plugin-for-apache-hadoop/issues'
      vcsUrl = 'https://github.com/linkedin/linkedin-gradle-plugin-for-apache-hadoop'
      websiteUrl = 'https://github.com/linkedin/linkedin-gradle-plugin-for-apache-hadoop'

      version {
        name = project.version
      }
    }
  }
}