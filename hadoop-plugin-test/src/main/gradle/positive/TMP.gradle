buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath files("${project.pluginTestDir}/hadoop-plugin-${project.version}.jar", "${project.pluginTestDir}/hadoop-plugin-${project.version}-SNAPSHOT.jar")
    classpath 'org.yaml:snakeyaml:1.18'
  }
}

apply plugin: com.linkedin.gradle.hadoop.HadoopPlugin

// Simple positive test cases for the various types of jobs.

propertySet('propertySet0') {
  set confProperties: [
          'mapred.property1' : 'value1'
  ]
  set jvmProperties: [
          'jvmPropertyName1' : 'jvm1'
  ]
  set properties: [
          myProperty1 : 'global1'
  ]
}

hadoop {
  buildPath "jobs"
  cleanPath false

  propertyFile('propertyFiles1Properties3') {
    baseProperties 'propertySet0'
    set properties: [
            'myPropertyC' : 'valC',
            'myPropertyD' : 'valD'
    ]
  }

  workflow('jobs2') {
    propertyFile('propertyFile1') {
      set properties: [
              'myPropertyA' : 'valA',
              'myPropertyB' : 'valB'
      ]
    }

    commandJob('job3') {
    job('job2') {
      reads files: [
        'foo' : '/data/databases/foo',
        'bar' : '/data/databases/bar',
      ]
      writes files: [
        'bazz' : '/data/databases/bazz'
      ]
      set properties: [
        'propertyName1' : 'propertyValue1'
      ]
    }

      uses 'echo "hello world"'
      depends clear: true, targetNames: ['job2']
    }

    hadoopJavaJob('job4') {
      uses 'com.linkedin.hello.HadoopJavaJob'
      caches files: [
        'foo.jar' : '/user/hacker/foo.jar'
      ]
      cachesArchive files: [
        'foobar' : '/user/hacker/foobar.zip'
      ]
      set confProperties: [
        'mapreduce.job.user.classpath.first': true,
        'mapreduce.reduce.memory.mb': 4096,
        'mapreduce.reduce.java.opts': '-Xmx3G'
      ]
      set properties: [
        'force.output.overwrite': true,
      ]
      queue 'marathon'
      depends 'job3'
    }

    workflow('subflow') {
      flowDepends 'job4'

      commandJob('k1') {
        uses 'chmod +123 your_file'
      }

      targets 'k1'
    }

    commandJob('otherEnd') {
      uses 'sudo -iu azkaban'
      depends 'job4'
    }

    targets 'subflow', 'otherEnd'
  }
}