buildscript {
  dependencies {
    classpath files("${project.pluginTestDir}/hadoop-plugin-${project.version}.jar", "${project.pluginTestDir}/hadoop-plugin-${project.version}-SNAPSHOT.jar")
  }
}

apply plugin: com.linkedin.gradle.hadoop.HadoopPlugin

// Simple positive test cases for property files.

def confPropertiesMap = [
  'mapred.property1' : 'value1',
  'mapred.property2' : 'value2'
]

def jvmPropertiesMap = [
  'jvmPropertyName1' : 'jvmPropertyValue1',
  'jvmPropertyName2' : 'jvmPropertyValue2'
]

def propertiesMap = [
  'myPropertyA' : 'valA',
  'myPropertyB' : 'valB'
]

propertyFile('propertyFiles1Properties1') {
  set confProperties: [
    'mapred.property1' : 'value1',
    'mapred.property2' : 'value2'
  ]
  set jvmProperties: [
    'jvmPropertyName1' : 'jvm1',
    'jvmPropertyName2' : 'jvm2'
  ]
  set properties: [
    myPropertyA : 'globalA',
    myPropertyB : 'globalB'
  ]
}

hadoop {
  buildPath "jobs"
  cleanPath false

  addPropertyFile('propertyFiles1Properties1') {
    set confProperties: [
      'mapred.property2' : 'value2Update',
      'mapred.property3' : 'value3'
    ]
    set jvmProperties: [
      'jvmPropertyName2' : 'jvm2Update',
      'jvmPropertyName3' : 'jvm3'
    ]
    set properties: [
      'myPropertyB' : 'globalBUpdate',
      'myPropertyC' : 'globalC'
    ]
  }

  propertyFile('propertyFiles1Properties2') {
    set confProperties: confPropertiesMap
    set jvmProperties: jvmPropertiesMap
    set properties: propertiesMap
  }

  propertyFile('propertyFiles1Properties3') {
    set properties: [
      'myPropertyC' : 'valC',
      'myPropertyD' : 'valD'
    ]
  }

  workflow('propertyFiles1Workflow1') {
    addPropertyFile('propertyFiles1Properties2') {
      set confProperties: [
        'mapred.property3' : 'value3'
      ]
      set jvmProperties: [
        'jvmPropertyName3' : 'jvm3'
      ]
      set properties: [
        'myPropertyC' : 'valC'
      ]
    }
  }
}