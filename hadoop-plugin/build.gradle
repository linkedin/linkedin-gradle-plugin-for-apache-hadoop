plugins {
  id 'groovy'
  id 'com.gradle.plugin-publish' version '0.9.7'
  id 'com.jfrog.bintray' version '1.7'
  id 'eclipse'
  id 'idea'
  id 'maven-publish'
}

repositories {
  jcenter()
}

// The group will be overridden in LinkedIn builds
group=rootProject.group

configurations {
  provided
}

sourceSets {
  main {
    compileClasspath+=configurations.provided
  }
  test {
    compileClasspath+=configurations.provided
    runtimeClasspath+=configurations.provided
  }
}

dependencies {
  compile gradleApi()
  compile localGroovy()

  compile project(":azkaban-client")

  compile 'org.antlr:antlr-runtime:3.5.2'
  compile('org.apache.hadoop:hadoop-auth:2.3.0') { transitive = false }
  compile('org.apache.hadoop:hadoop-common:2.3.0') { transitive = false }
  compile('org.apache.hadoop:hadoop-hdfs:2.3.0') { transitive = false }
  compile 'org.apache.oozie:oozie-client:4.2.0'
  compile('org.apache.pig:pig:0.15.0') { transitive = false }

  runtime 'com.googlecode.json-simple:json-simple:1.1'
  runtime 'com.sun.jersey:jersey-client:1.9'
  runtime 'com.sun.jersey:jersey-core:1.9'
  runtime 'javax.ws.rs:jsr311-api:1.1.1'
  runtime 'jline:jline:1.0'
  runtime 'joda-time:joda-time:2.9.4'
  runtime 'org.mortbay.jetty:jetty-util:6.1.25'

  testCompile 'junit:junit:4.12'
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
  description = 'An archive of the GroovyDocs for the Hadoop Gradle Plugin'
  classifier = 'groovydoc'
  from groovydoc.destinationDir
}

task sourceJar(type: Jar) {
  description = 'An archive of the source code for the Hadoop Gradle Plugin'
  classifier = 'sources'
  from sourceSets.main.groovy
}

artifacts {
  archives groovydocJar
  archives sourceJar
}

// Configuration for uploading to plugins.gradle.org
pluginBundle {
  description = 'LinkedIn Gradle Plugin and DSL for the Apache Hadoop Ecosystem'
  tags = ['azkaban', 'hadoop', 'hadoopdsl', 'linkedin']
  website = 'https://github.com/linkedin/linkedin-gradle-plugin-for-apache-hadoop'
  vcsUrl = 'https://github.com/linkedin/linkedin-gradle-plugin-for-apache-hadoop'

  plugins {
    hadoopPlugin {
      id = 'com.linkedin.gradle.hadoop.HadoopPlugin'
      displayName = 'Hadoop Plugin'
    }
  }
}

// Maven publishing setup necessary for linking Bintray to JCenter
publishing {
  publications {
    hadoopPluginPublication(MavenPublication) {
      from components.java
      artifact groovydocJar
      artifact sourceJar
      groupId rootProject.group
      artifactId project.name
      version project.version
    }
  }
}

// Make sure we don't accidentally publish a SNAPSHOT version
publishPlugins { task ->
  doFirst {
    if (version.endsWith("SNAPSHOT")) {
      throw new GradleException("Cannot publish SNAPSHOT versions")
    }
  }
}

// Make sure we don't accidentally publish a SNAPSHOT version
bintrayUpload { task ->
  doFirst {
    if (version.endsWith("SNAPSHOT")) {
      throw new GradleException("Cannot publish SNAPSHOT versions")
    }
  }
}

// Configuration for uploading to Bintray
if (project.hasProperty('bintrayUser') && project.hasProperty('bintrayApiKey')) {
  bintray {
    dryRun = false
    user = project.bintrayUser
    key = project.bintrayApiKey
    publications = ['hadoopPluginPublication']

    pkg {
      desc = 'LinkedIn Gradle Plugin and DSL for the Apache Hadoop Ecosystem'
      labels = ['azkaban', 'gradle', 'hadoop', 'hadoopdsl', 'linkedin']
      licenses = ['Apache-2.0']
      name = 'linkedin-gradle-plugin-for-apache-hadoop'
      repo = 'maven'

      issueTrackerUrl = 'https://github.com/linkedin/linkedin-gradle-plugin-for-apache-hadoop/issues'
      vcsUrl = 'https://github.com/linkedin/linkedin-gradle-plugin-for-apache-hadoop'
      websiteUrl = 'https://github.com/linkedin/linkedin-gradle-plugin-for-apache-hadoop'

      version {
        name = project.version
      }
    }
  }
}
