plugins {
  id 'groovy'
  id 'com.jfrog.bintray' version '1.7'
  id 'eclipse'
  id 'idea'
  id 'maven-publish'
}

repositories {
  jcenter()
}

// The group will be overridden in LinkedIn builds
group=rootProject.group

dependencies {
  compile gradleApi()
  compile localGroovy()

  compile 'org.apache.httpcomponents:httpclient:4.5.2'
  compile 'org.apache.httpcomponents:httpcore:4.4.5'
  compile 'org.apache.httpcomponents:httpmime:4.5.2'
  compile 'org.json:json:20090211'
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
  description = 'An archive of the GroovyDocs for the Hadoop Gradle Plugin azkaban-client project'
  classifier = 'groovydoc'
  from groovydoc.destinationDir
}

task sourceJar(type: Jar) {
  description = 'An archive of the source code for the Hadoop Gradle Plugin azkaban-client project'
  classifier = 'sources'
  from sourceSets.main.groovy
}

artifacts {
  archives groovydocJar
  archives sourceJar
}

// Maven publishing setup necessary for linking Bintray to JCenter
publishing {
  publications {
    azkabanClientPublication(MavenPublication) {
      from components.java
      artifact groovydocJar
      artifact sourceJar
      groupId rootProject.group
      artifactId project.name
      version project.version
    }
  }
}

// Make sure we don't accidentally publish a SNAPSHOT version
bintrayUpload { task ->
  doFirst {
    if (version.endsWith("SNAPSHOT")) {
      throw new GradleException("Cannot publish SNAPSHOT versions")
    }
  }
}

// Configuration for uploading to Bintray
if (project.hasProperty('bintrayUser') && project.hasProperty('bintrayApiKey')) {
  bintray {
    dryRun = false
    user = project.bintrayUser
    key = project.bintrayApiKey
    publications = ['azkabanClientPublication']

    pkg {
      desc = 'LinkedIn Gradle Plugin and DSL for the Apache Hadoop Ecosystem'
      labels = ['azkaban', 'gradle', 'hadoop', 'hadoopdsl', 'linkedin']
      licenses = ['Apache-2.0']
      name = 'linkedin-gradle-plugin-for-apache-hadoop'
      repo = 'maven'

      issueTrackerUrl = 'https://github.com/linkedin/linkedin-gradle-plugin-for-apache-hadoop/issues'
      vcsUrl = 'https://github.com/linkedin/linkedin-gradle-plugin-for-apache-hadoop'
      websiteUrl = 'https://github.com/linkedin/linkedin-gradle-plugin-for-apache-hadoop'

      version {
        name = project.version
      }
    }
  }
}
