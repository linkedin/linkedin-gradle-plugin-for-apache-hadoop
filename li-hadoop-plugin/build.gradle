plugins {
  id 'groovy'
  id 'eclipse'
  id 'idea'
}

repositories {
  jcenter()
}

// The group will be overridden in LinkedIn builds
group=rootProject.group

configurations {
  provided
}

sourceSets {
 main {
    compileClasspath+=configurations.provided
  }
  test {
    compileClasspath+=configurations.provided
    runtimeClasspath+=configurations.provided
  }
}

dependencies {
  compile gradleApi()
  compile localGroovy()

  compile project(":hadoop-plugin")
  provided project(":hadoop-plugin")
}

task sourceJar(type: Jar) {
  description = 'An archive of the source code for the Hadoop Gradle Plugin - LinkedIn customizations'
  classifier = 'sources'
  from sourceSets.main.groovy
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
  description = 'An archive of the GroovyDocs for the Hadoop Gradle Plugin - LinkedIn customizations'
  classifier = 'groovydoc'
  from groovydoc.destinationDir
}

artifacts {
  archives groovydocJar, sourceJar
}

// In LinkedIn internal builds, we pull in some company-specific resource files into this project.
boolean isLinkedInBuild = project.hasProperty('overrideBuildEnvironment')

if (isLinkedInBuild) {
  task copyLinkedInResources(type: Copy) {
    from "${rootProject.projectDir}/../resources"
    into "${project.projectDir}/src/main/resources"
  }
  compileGroovy.dependsOn copyLinkedInResources
}
